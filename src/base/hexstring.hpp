#ifndef TOLLY_HEX_STRING_HPP_
#define TOLLY_HEX_STRING_HPP_
#include <sstream>
#include <string>
namespace tolly {
// 十六进制的字符和数字对应表
const char hexNum[128] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x0A, 0x0B, 0x0C, 0x0D, 0x0E, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x0A, 0x0B, 0x0C, 0x0D, 0x0E, 0x0F
	};

const char hexStr[] = {'0','1','2','3','4','5','6','7','8','9','A','B','C','D','E','F','\0'};


template< typename T >
inline std::string  numToHex(T i) {
	std::stringstream stream;
	stream << std::setfill ('0') << std::setw(std::numeric_limits<T>::digits/4)
	       << std::hex << i;
	return stream.str();
	}

inline std::string  timeToHex(long long i) {
	std::stringstream stream;
	stream << std::hex << i;
	return stream.str();
	}
inline long long HexToLL(std::string &s) {
  long long r;
  std::stringstream stream;
  stream <<std::hex << s;
  stream >> r;
  return r;
}

inline std::string getTimeString() {
	std::string r;
	auto today = std::chrono::system_clock::now();
	auto tt = std::chrono::system_clock::to_time_t(today);
	std::stringstream stream;
	stream << tt;
	stream >> r;
	return r;
}

} //namespace

#endif // TOLLY_HEX_STRING_HPP_
